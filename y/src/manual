usage:
  [y banco fromCSV -outTable tabelaA selectInsert]
  [y banco conn,hash [select|selectInsert|selectCSV] [|select..]]
  [y banco conn,hash executeInsert]
  [y banco conn,hash execute [|execute..]]
  [y banco conn,hash createjobexecute]
  [y banco [connIn,hash|fileCSV,file] connOut,hash -outTable tabelaA [|trunc|createTable] [carga|createjobcarga]]
  [y banco executejob]
  [y banco buffer [|-n_lines 500] [|-log buffer.log]]
  [y token]
  [y gettoken]
  [y gzip]
  [y gunzip]
  [y echo]
  [y cat]
  [y md5]
  [y sha1]
  [y sha256]
  [y base64]
  [y grep]
  [y wc -l]
  [y head]
  [y tail]
  [y cut]
  [y sed]
  [y tee]
  [y awk print]
  [y dev_null]
  [y dev_in]
  [y scp]
  [y execSsh]
  [y ssh]
  [y sftp]
  [y serverRouter]
  [y help]

Exemplos...

[y banco fromCSV -outTable tabelaA selectInsert]
    cat arquivo.csv | y banco fromCSV -outTable tabelaA selectInsert
[y banco conn,hash [select|selectInsert|selectCSV] [|select..]]
    echo "select 1 from dual" | y banco conn,hash select
    y banco conn,hash select "select 1 from dual"
    echo "select * from tabela1" | y banco conn,hash selectInsert
    cat select.sql | y banco conn,hash selectCSV
    y banco -conn conn.. selectInsert
[y banco conn,hash executeInsert]
    cat listaDeInsert.sql | y banco conn,hash executeInsert
    echo "insert into tabela1 values(1,2,3)" | y banco conn,hash executeInsert
    echo "insert into tabela1 values(1,2,3);" | y banco conn,hash executeInsert
[y banco conn,hash execute [|execute..]]
    echo "truncate table tabela1" | y banco conn,hash execute
    y banco conn,hash execute "drop table tabela1"
    cat blocoAnonimo | y banco conn,hash execute
[y banco conn,hash createjobexecute]
    echo "truncate table tabela1" | y banco conn,hash createjobexecute
[y banco [connIn,hash|fileCSV,file] connOut,hash -outTable tabelaA [|trunc|createTable] [carga|createjobcarga]]
    echo "select * from TABELA_AAA" | y banco connIn,hash connOut,hash -outTable TABELA_BBB carga
    echo "select * from TABELA_AAA" | y banco connIn,hash connOut,hash -outTable TABELA_BBB trunc carga
    echo "select * from TABELA_AAA" | y banco connIn,hash connOut,hash -outTable TABELA_BBB createTable carga
    y banco -fileCSV arquivo.csv connOut,hash -outTable TABELA_CCC carga
    y banco -fileCSV arquivo.csv connOut,hash -outTable TABELA_CCC trunc carga
    y banco -fileCSV arquivo.csv connOut,hash -outTable TABELA_CCC createTable carga
[y banco executejob]
    (
        echo "select * from TABELA_AAA" | y banco connIn,hash connOut,hash -outTable TABELA_BBB trunc createjobcarga
        echo "select * from TABELA_CCC" | y banco connIn,hash connOut,hash -outTable TABELA_CCC trunc createjobcarga
    ) | y banco executejob
[y banco buffer [|-n_lines 500] [|-log buffer.log]]    
    echo "select * from TABELA1 | y banco conn,hash selectInsert | y banco buffer -n_lines 500 -log buffer.log | y banco conn,hash executeInsert
[y token]
    y token value
[y gettoken]
    y gettoken hash
[y gzip]
    cat arquivo | y gzip > arquivo.gz
[y gunzip]
    cat arquivo.gz | y gunzip > arquivo
[y echo]
    echo a b c
    echo "a b c"
[y cat]
    y cat arquivo
[y md5]
    cat arquivo | y md5
[y sha1]
    cat arquivo | y sha1
[y sha256]
    cat arquivo | y sha256
[y base64]
    cat arquivo | y base64
[y grep]
    cat arquivo | y grep ^Texto$
    cat arquivo | y grep AB
[y wc -l]
    cat arquivo | y wc -l
[y head]
    cat arquivo | y head
    cat arquivo | y head -30
[y tail]
    cat arquivo | y tail
    cat arquivo | y tail -30
[y cut]
    cat arquivo | y cut -c-10
    cat arquivo | y cut -c5-10
    cat arquivo | y cut -c5-
    cat arquivo | y cut -c5
    cat arquivo | y cut -c5-10,15-17
[y sed]
    cat arquivo | y sed A B
    cat arquivo | y sed A1 A2 B1 B2
[y tee]
    cat arquivo | y tee saida.txt
[y awk]
    cat arquivo | y awk print 1 3 5,6
    cat arquivo | y awk start AAA end BBB    
    cat arquivo | y awk start AAA
    cat arquivo | y awk end BBB    
    cat arquivo | y awk -v start AAA end BBB    
    cat arquivo | y awk -v start AAA
    cat arquivo | y awk -v end BBB    
    obs: "-v" é a negativa
    obs2: start e end pode ocorrer varias vezes no texto
[y dev_null]
    cat arquivo | y banco buffer -n_lines 500 -log buffer.log | y dev_null
[y dev_in]
    y dev_in | y banco buffer -n_lines 500 -log buffer.log | y dev_null
[y scp]
    y scp file1 user,pass@servidor:file2
    y scp user,pass@servidor:file1 file2
[y execSsh]
    y execSsh user,pass@servidor command
[y ssh]
    y ssh user,pass@servidor
[y sftp]
    y sftp user,pass@servidor
    y sftp user,pass@servidor 22
[y serverRouter]
    y serverRouter 192.168.0.100 8080 localhost 9090
    y serverRouter 192.168.0.100 8080 localhost 9090 show
    y serverRouter 192.168.0.100 8080 localhost 9090 showOnlySend
    y serverRouter 192.168.0.100 8080 localhost 9090 showOnlyReceive

    y serverRouter localhost 8080 localhost 9090
    y serverRouter localhost 8080 localhost 9090 show
    y serverRouter localhost 8080 localhost 9090 showOnlySend
    y serverRouter localhost 8080 localhost 9090 showOnlyReceive
    obs:
        192.168.0.100 -> ip a se conectar(se colocar localhost ele vai tentar pegar o ip correto)
        8080 -> porta para conectar no router
        localhost -> local que o serverRouter conecta(use nome da maquina ou ip)
        9090 -> porta que o serverRouter conecta
[y TESTEserver]
    y TESTEserver 9090
    y TESTEserver 192.168.0.100 9090
[y TESTEclient]
    y TESTEclient localhost 8080


Exemplo de conn: -conn "jdbc:oracle:thin:@//host_name:1521/service_name|login|senha"
Exemplo de conn: -conn "jdbc:oracle:thin:@host_name:1566:sid_name|login|senha"

Observações:
entrada de dados pode ser feito por |
export STATUS_FIM_Y=path/fim.log para receber a confirmação de fim de processamento de selectCSV
export COUNT_Y=path/count.log para receber a quantidade de linhas geradas no CSV(sem o header) do comando selectCSV

Dica: copiar o arquivo hash do token pra o nome do banco. cd $TOKEN_Y;cp 38b3492c4405f98972ba17c0a3dc072d servidor;
Dica2: vendo os tokens: grep ":" $TOKEN_Y/*
Dica3: vendo warnnings ORA: cat $ORAs_Y

alias no windows(set_alias_windows.reg):
Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor]
"AutoRun"="DOSKEY y=java -cp c:\\y;c:\\y\\ojdbc6.jar Y $*"

alias no linux:
alias y='java -cp /y:/y/ojdbc6.jar Y'

o alias windows funciona nesse comando "y echo a" mas nao nesse "y echo a | y wc -l"

